{"dependencies":[{"name":"expo-in-app-purchases","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":113},"end":{"line":5,"column":56,"index":169}}],"key":"MA+oMtN5vZWr/JMevEiH8IcSM9g=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":211},"end":{"line":7,"column":26,"index":237}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":238},"end":{"line":8,"column":39,"index":277}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"PRODUCT_IDS\", {\n    enumerable: true,\n    get: function () {\n      return PRODUCT_IDS;\n    }\n  });\n  Object.defineProperty(exports, \"iapService\", {\n    enumerable: true,\n    get: function () {\n      return iapService;\n    }\n  });\n  var _expoInAppPurchases = require(_dependencyMap[0], \"expo-in-app-purchases\");\n  var InAppPurchases = _interopNamespace(_expoInAppPurchases);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _axios = require(_dependencyMap[2], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  /**\n   * In-App Purchase service using expo-in-app-purchases\n   * Singleton pattern with one-time initialization\n   */\n\n  // Get backend URL\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n\n  // Product IDs\n  const PRODUCT_IDS = {\n    WEEKLY_PREMIUM: 'com.yourorg.biblechat.premium.weekly' // Weekly + 7-day trial\n  };\n  class IAPService {\n    isInitialized = false;\n    purchaseListener = null;\n    onPurchaseUpdate = null;\n\n    /**\n     * Initialize IAP connection (singleton - called once)\n     */\n    async connect() {\n      if (this.isInitialized) {\n        console.log('[IAP] Already initialized');\n        return;\n      }\n      try {\n        await InAppPurchases.connectAsync();\n        this.isInitialized = true;\n        console.log('[Analytics] iap_init', {\n          platform: Platform.default.OS\n        });\n        console.log('✅ [IAP] Connected successfully');\n      } catch (error) {\n        console.error('❌ [IAP] Failed to connect:', error);\n        throw new Error('Failed to initialize purchases');\n      }\n    }\n\n    /**\n     * Disconnect and cleanup\n     */\n    async disconnect() {\n      if (this.purchaseListener) {\n        this.purchaseListener.remove();\n        this.purchaseListener = null;\n      }\n      try {\n        await InAppPurchases.disconnectAsync();\n        this.isInitialized = false;\n        console.log('✅ [IAP] Disconnected');\n      } catch (error) {\n        console.error('❌ [IAP] Disconnect error:', error);\n      }\n    }\n\n    /**\n     * Get products from store\n     */\n    async getProducts(productIds) {\n      if (!this.isInitialized) {\n        await this.connect();\n      }\n      try {\n        const {\n          results,\n          responseCode\n        } = await InAppPurchases.getProductsAsync(productIds);\n        if (responseCode === InAppPurchases.IAPResponseCode.OK) {\n          console.log('[Analytics] iap_products_loaded', {\n            count: results?.length || 0\n          });\n          console.log('✅ [IAP] Products loaded:', results);\n          return results || [];\n        } else {\n          console.error('❌ [IAP] Failed to fetch products:', responseCode);\n          return [];\n        }\n      } catch (error) {\n        console.error('❌ [IAP] Get products error:', error);\n        return [];\n      }\n    }\n\n    /**\n     * Purchase a product\n     */\n    async purchaseProduct(productId) {\n      if (!this.isInitialized) {\n        await this.connect();\n      }\n      try {\n        console.log('[Analytics] iap_purchase_start', {\n          productId\n        });\n        await InAppPurchases.purchaseItemAsync(productId);\n        // Result will come through purchase listener\n      } catch (error) {\n        console.error('❌ [IAP] Purchase error:', error);\n        console.log('[Analytics] iap_purchase_fail', {\n          error: error?.message\n        });\n        throw error;\n      }\n    }\n\n    /**\n     * Verify subscription with backend server\n     * @param transactionId - Transaction ID from purchase/restore\n     * @param cachedOriginalTransactionId - Cached original transaction ID if available\n     */\n    async verifyWithServer(transactionId, cachedOriginalTransactionId) {\n      try {\n        console.log('[Analytics] verify_subscription_start', {\n          transactionId\n        });\n        const response = await axios.default.post(`${BACKEND_URL}/api/subscription/verify`, {\n          platform: 'ios',\n          transactionId,\n          originalTransactionId: cachedOriginalTransactionId\n        });\n        const data = response.data;\n        console.log('[Analytics] verify_subscription_success', {\n          status: data.status,\n          originalTransactionId: data.originalTransactionId\n        });\n        return {\n          status: data.status === 'active' ? 'active' : data.status === 'trial' ? 'trial' : 'expired',\n          needsServerValidation: false,\n          trialEndsAt: data.trialEndsAt,\n          originalTransactionId: data.originalTransactionId\n        };\n      } catch (error) {\n        console.error('❌ [IAP] Server verification failed:', error);\n        console.log('[Analytics] verify_subscription_fail', {\n          error\n        });\n\n        // Return temporary state pending server validation\n        return {\n          status: 'active',\n          needsServerValidation: true,\n          originalTransactionId: cachedOriginalTransactionId\n        };\n      }\n    }\n\n    /**\n     * Restore purchases\n     */\n    async restorePurchases(cachedOriginalTransactionId) {\n      if (!this.isInitialized) {\n        await this.connect();\n      }\n      try {\n        console.log('[Analytics] iap_restore_start');\n        const {\n          results\n        } = await InAppPurchases.getPurchaseHistoryAsync();\n        if (results && results.length > 0) {\n          // Find our product in purchase history\n          const ourProduct = results.find(p => p.productId === PRODUCT_IDS.WEEKLY_PREMIUM);\n          if (ourProduct) {\n            console.log('[Analytics] iap_restore_success', {\n              productId: ourProduct.productId\n            });\n            console.log('✅ [IAP] Restore found purchase:', ourProduct);\n\n            // Verify with server\n            const verifiedState = await this.verifyWithServer(ourProduct.transactionId, cachedOriginalTransactionId);\n            return verifiedState;\n          } else {\n            console.log('[Analytics] iap_restore_empty', {\n              reason: 'no_matching_product'\n            });\n            return {\n              status: 'free',\n              needsServerValidation: false\n            };\n          }\n        } else {\n          console.log('[Analytics] iap_restore_empty', {\n            reason: 'no_purchases'\n          });\n          return {\n            status: 'free',\n            needsServerValidation: false\n          };\n        }\n      } catch (error) {\n        console.error('❌ [IAP] Restore error:', error);\n        console.log('[Analytics] iap_restore_fail', {\n          error\n        });\n        throw new Error('Failed to restore purchases');\n      }\n    }\n\n    /**\n     * Setup purchase update listener (call once)\n     */\n    setupPurchaseListener(callback) {\n      if (this.purchaseListener) {\n        console.warn('[IAP] Purchase listener already set, removing old one');\n        this.purchaseListener.remove();\n      }\n      this.onPurchaseUpdate = callback;\n      this.purchaseListener = InAppPurchases.setPurchaseListener(({\n        responseCode,\n        results,\n        errorCode\n      }) => {\n        console.log('[IAP] Purchase update:', {\n          responseCode,\n          errorCode,\n          resultsCount: results?.length\n        });\n        if (responseCode === InAppPurchases.IAPResponseCode.OK) {\n          if (results && results.length > 0) {\n            const purchase = results[0];\n            console.log('[Analytics] iap_purchase_success', {\n              productId: purchase.productId,\n              transactionId: purchase.transactionId\n            });\n            const state = {\n              status: 'active',\n              // Assume active; server will validate\n              needsServerValidation: true,\n              originalTransactionId: purchase.transactionId\n              // Note: expo-in-app-purchases doesn't reliably provide trial end date\n              // Phase 5 will get this from server validation\n            };\n            this.onPurchaseUpdate?.(state);\n          }\n        } else if (responseCode === InAppPurchases.IAPResponseCode.USER_CANCELED) {\n          console.log('[Analytics] iap_purchase_cancelled');\n          // User cancelled - no state update needed\n        } else if (responseCode === InAppPurchases.IAPResponseCode.DEFERRED) {\n          console.log('[Analytics] iap_purchase_deferred');\n          // Payment deferred (e.g., Ask to Buy) - wait for approval\n        } else {\n          console.log('[Analytics] iap_purchase_fail', {\n            responseCode,\n            errorCode\n          });\n          // Purchase failed - show error\n        }\n      });\n      console.log('✅ [IAP] Purchase listener registered');\n    }\n\n    /**\n     * Remove purchase listener\n     */\n    removePurchaseListener() {\n      if (this.purchaseListener) {\n        this.purchaseListener.remove();\n        this.purchaseListener = null;\n        console.log('✅ [IAP] Purchase listener removed');\n      }\n    }\n\n    /**\n     * Sync entitlement status on app launch (throttled - once per session)\n     * @param cachedOriginalTransactionId - Cached original transaction ID from store\n     * @param needsServerValidation - Whether server validation is needed\n     */\n    async syncEntitlementOnLaunch(cachedOriginalTransactionId, needsServerValidation = false) {\n      // Skip if no transaction ID and no validation needed\n      if (!cachedOriginalTransactionId && !needsServerValidation) {\n        console.log('[IAP] Sync skipped - no transaction ID');\n        return null;\n      }\n      try {\n        console.log('[Analytics] entitlement_sync_start', {\n          hasOriginalTransactionId: !!cachedOriginalTransactionId\n        });\n        const response = await axios.default.get(`${BACKEND_URL}/api/subscription/status`, {\n          params: {\n            originalTransactionId: cachedOriginalTransactionId\n          }\n        });\n        const data = response.data;\n        console.log('[Analytics] entitlement_sync_success', {\n          status: data.status,\n          originalTransactionId: data.originalTransactionId\n        });\n        return {\n          status: data.status === 'active' ? 'active' : data.status === 'trial' ? 'trial' : 'expired',\n          needsServerValidation: false,\n          trialEndsAt: data.trialEndsAt,\n          originalTransactionId: data.originalTransactionId\n        };\n      } catch (error) {\n        console.error('❌ [IAP] Entitlement sync failed:', error);\n        console.log('[Analytics] entitlement_sync_fail', {\n          reason: 'network_or_server_error'\n        });\n\n        // Return null - keep previous local state (don't flip to free)\n        return null;\n      }\n    }\n\n    /**\n     * Check if IAP is available on platform\n     */\n    isAvailable() {\n      // IAP only works on iOS/Android, not web\n      return Platform.default.OS === 'ios' || Platform.default.OS === 'android';\n    }\n  }\n\n  // Export singleton instance\n  const iapService = new IAPService();\n});","lineCount":361,"map":[[27,2,14,0,"Object"],[27,8,14,0],[27,9,14,0,"defineProperty"],[27,23,14,0],[27,24,14,0,"exports"],[27,31,14,0],[28,4,14,0,"enumerable"],[28,14,14,0],[29,4,14,0,"get"],[29,7,14,0],[29,18,14,0,"get"],[29,19,14,0],[30,6,14,0],[30,13,14,0,"PRODUCT_IDS"],[30,24,14,0],[31,4,14,0],[32,2,14,0],[33,2,316,0,"Object"],[33,8,316,0],[33,9,316,0,"defineProperty"],[33,23,316,0],[33,24,316,0,"exports"],[33,31,316,0],[34,4,316,0,"enumerable"],[34,14,316,0],[35,4,316,0,"get"],[35,7,316,0],[35,18,316,0,"get"],[35,19,316,0],[36,6,316,0],[36,13,316,0,"iapService"],[36,23,316,0],[37,4,316,0],[38,2,316,0],[39,2,5,0],[39,6,5,0,"_expoInAppPurchases"],[39,25,5,0],[39,28,5,0,"require"],[39,35,5,0],[39,36,5,0,"_dependencyMap"],[39,50,5,0],[40,2,5,0],[40,6,5,0,"InAppPurchases"],[40,20,5,0],[40,23,5,0,"_interopNamespace"],[40,40,5,0],[40,41,5,0,"_expoInAppPurchases"],[40,60,5,0],[41,2,5,56],[41,6,5,56,"_reactNativeWebDistExportsPlatform"],[41,40,5,56],[41,43,5,56,"require"],[41,50,5,56],[41,51,5,56,"_dependencyMap"],[41,65,5,56],[42,2,5,56],[42,6,5,56,"Platform"],[42,14,5,56],[42,17,5,56,"_interopDefault"],[42,32,5,56],[42,33,5,56,"_reactNativeWebDistExportsPlatform"],[42,67,5,56],[43,2,7,0],[43,6,7,0,"_axios"],[43,12,7,0],[43,15,7,0,"require"],[43,22,7,0],[43,23,7,0,"_dependencyMap"],[43,37,7,0],[44,2,7,0],[44,6,7,0,"axios"],[44,11,7,0],[44,14,7,0,"_interopDefault"],[44,29,7,0],[44,30,7,0,"_axios"],[44,36,7,0],[45,2,8,0],[45,6,8,0,"_expoConstants"],[45,20,8,0],[45,23,8,0,"require"],[45,30,8,0],[45,31,8,0,"_dependencyMap"],[45,45,8,0],[46,2,8,0],[46,6,8,0,"Constants"],[46,15,8,0],[46,18,8,0,"_interopDefault"],[46,33,8,0],[46,34,8,0,"_expoConstants"],[46,48,8,0],[47,2,1,0],[48,0,2,0],[49,0,3,0],[50,0,4,0],[52,2,10,0],[53,2,11,0],[53,8,11,6,"BACKEND_URL"],[53,19,11,17],[53,22,11,20,"Constants"],[53,31,11,29],[53,32,11,29,"default"],[53,39,11,29],[53,40,11,30,"expoConfig"],[53,50,11,40],[53,52,11,42,"extra"],[53,57,11,47],[53,59,11,49,"EXPO_PUBLIC_BACKEND_URL"],[53,82,11,72],[53,86,11,76,"process"],[53,93,11,83],[53,94,11,84,"env"],[53,97,11,87],[53,98,11,88,"EXPO_PUBLIC_BACKEND_URL"],[53,121,11,111],[53,125,11,115],[53,148,11,138],[55,2,13,0],[56,2,14,7],[56,8,14,13,"PRODUCT_IDS"],[56,19,14,24],[56,22,14,27],[57,4,15,2,"WEEKLY_PREMIUM"],[57,18,15,16],[57,20,15,18],[57,58,15,56],[57,59,15,58],[58,2,16,0],[58,3,16,1],[59,2,25,0],[59,8,25,6,"IAPService"],[59,18,25,16],[59,19,25,17],[60,4,26,10,"isInitialized"],[60,17,26,23],[60,20,26,26],[60,25,26,31],[61,4,27,10,"purchaseListener"],[61,20,27,26],[61,23,27,65],[61,27,27,69],[62,4,28,10,"onPurchaseUpdate"],[62,20,28,26],[62,23,28,74],[62,27,28,78],[64,4,30,2],[65,0,31,0],[66,0,32,0],[67,4,33,2],[67,10,33,8,"connect"],[67,17,33,15,"connect"],[67,18,33,15],[67,20,33,33],[68,6,34,4],[68,10,34,8],[68,14,34,12],[68,15,34,13,"isInitialized"],[68,28,34,26],[68,30,34,28],[69,8,35,6,"console"],[69,15,35,13],[69,16,35,14,"log"],[69,19,35,17],[69,20,35,18],[69,47,35,45],[69,48,35,46],[70,8,36,6],[71,6,37,4],[72,6,39,4],[72,10,39,8],[73,8,40,6],[73,14,40,12,"InAppPurchases"],[73,28,40,26],[73,29,40,27,"connectAsync"],[73,41,40,39],[73,42,40,40],[73,43,40,41],[74,8,41,6],[74,12,41,10],[74,13,41,11,"isInitialized"],[74,26,41,24],[74,29,41,27],[74,33,41,31],[75,8,42,6,"console"],[75,15,42,13],[75,16,42,14,"log"],[75,19,42,17],[75,20,42,18],[75,42,42,40],[75,44,42,42],[76,10,42,44,"platform"],[76,18,42,52],[76,20,42,54,"Platform"],[76,28,42,62],[76,29,42,62,"default"],[76,36,42,62],[76,37,42,63,"OS"],[77,8,42,66],[77,9,42,67],[77,10,42,68],[78,8,43,6,"console"],[78,15,43,13],[78,16,43,14,"log"],[78,19,43,17],[78,20,43,18],[78,52,43,50],[78,53,43,51],[79,6,44,4],[79,7,44,5],[79,8,44,6],[79,15,44,13,"error"],[79,20,44,18],[79,22,44,20],[80,8,45,6,"console"],[80,15,45,13],[80,16,45,14,"error"],[80,21,45,19],[80,22,45,20],[80,50,45,48],[80,52,45,50,"error"],[80,57,45,55],[80,58,45,56],[81,8,46,6],[81,14,46,12],[81,18,46,16,"Error"],[81,23,46,21],[81,24,46,22],[81,56,46,54],[81,57,46,55],[82,6,47,4],[83,4,48,2],[85,4,50,2],[86,0,51,0],[87,0,52,0],[88,4,53,2],[88,10,53,8,"disconnect"],[88,20,53,18,"disconnect"],[88,21,53,18],[88,23,53,36],[89,6,54,4],[89,10,54,8],[89,14,54,12],[89,15,54,13,"purchaseListener"],[89,31,54,29],[89,33,54,31],[90,8,55,6],[90,12,55,10],[90,13,55,11,"purchaseListener"],[90,29,55,27],[90,30,55,28,"remove"],[90,36,55,34],[90,37,55,35],[90,38,55,36],[91,8,56,6],[91,12,56,10],[91,13,56,11,"purchaseListener"],[91,29,56,27],[91,32,56,30],[91,36,56,34],[92,6,57,4],[93,6,59,4],[93,10,59,8],[94,8,60,6],[94,14,60,12,"InAppPurchases"],[94,28,60,26],[94,29,60,27,"disconnectAsync"],[94,44,60,42],[94,45,60,43],[94,46,60,44],[95,8,61,6],[95,12,61,10],[95,13,61,11,"isInitialized"],[95,26,61,24],[95,29,61,27],[95,34,61,32],[96,8,62,6,"console"],[96,15,62,13],[96,16,62,14,"log"],[96,19,62,17],[96,20,62,18],[96,42,62,40],[96,43,62,41],[97,6,63,4],[97,7,63,5],[97,8,63,6],[97,15,63,13,"error"],[97,20,63,18],[97,22,63,20],[98,8,64,6,"console"],[98,15,64,13],[98,16,64,14,"error"],[98,21,64,19],[98,22,64,20],[98,49,64,47],[98,51,64,49,"error"],[98,56,64,54],[98,57,64,55],[99,6,65,4],[100,4,66,2],[102,4,68,2],[103,0,69,0],[104,0,70,0],[105,4,71,2],[105,10,71,8,"getProducts"],[105,21,71,19,"getProducts"],[105,22,71,20,"productIds"],[105,32,71,40],[105,34,71,84],[106,6,72,4],[106,10,72,8],[106,11,72,9],[106,15,72,13],[106,16,72,14,"isInitialized"],[106,29,72,27],[106,31,72,29],[107,8,73,6],[107,14,73,12],[107,18,73,16],[107,19,73,17,"connect"],[107,26,73,24],[107,27,73,25],[107,28,73,26],[108,6,74,4],[109,6,76,4],[109,10,76,8],[110,8,77,6],[110,14,77,12],[111,10,77,14,"results"],[111,17,77,21],[112,10,77,23,"responseCode"],[113,8,77,36],[113,9,77,37],[113,12,77,40],[113,18,77,46,"InAppPurchases"],[113,32,77,60],[113,33,77,61,"getProductsAsync"],[113,49,77,77],[113,50,77,78,"productIds"],[113,60,77,88],[113,61,77,89],[114,8,79,6],[114,12,79,10,"responseCode"],[114,24,79,22],[114,29,79,27,"InAppPurchases"],[114,43,79,41],[114,44,79,42,"IAPResponseCode"],[114,59,79,57],[114,60,79,58,"OK"],[114,62,79,60],[114,64,79,62],[115,10,80,8,"console"],[115,17,80,15],[115,18,80,16,"log"],[115,21,80,19],[115,22,80,20],[115,55,80,53],[115,57,80,55],[116,12,80,57,"count"],[116,17,80,62],[116,19,80,64,"results"],[116,26,80,71],[116,28,80,73,"length"],[116,34,80,79],[116,38,80,83],[117,10,80,85],[117,11,80,86],[117,12,80,87],[118,10,81,8,"console"],[118,17,81,15],[118,18,81,16,"log"],[118,21,81,19],[118,22,81,20],[118,48,81,46],[118,50,81,48,"results"],[118,57,81,55],[118,58,81,56],[119,10,82,8],[119,17,82,15,"results"],[119,24,82,22],[119,28,82,26],[119,30,82,28],[120,8,83,6],[120,9,83,7],[120,15,83,13],[121,10,84,8,"console"],[121,17,84,15],[121,18,84,16,"error"],[121,23,84,21],[121,24,84,22],[121,59,84,57],[121,61,84,59,"responseCode"],[121,73,84,71],[121,74,84,72],[122,10,85,8],[122,17,85,15],[122,19,85,17],[123,8,86,6],[124,6,87,4],[124,7,87,5],[124,8,87,6],[124,15,87,13,"error"],[124,20,87,18],[124,22,87,20],[125,8,88,6,"console"],[125,15,88,13],[125,16,88,14,"error"],[125,21,88,19],[125,22,88,20],[125,51,88,49],[125,53,88,51,"error"],[125,58,88,56],[125,59,88,57],[126,8,89,6],[126,15,89,13],[126,17,89,15],[127,6,90,4],[128,4,91,2],[130,4,93,2],[131,0,94,0],[132,0,95,0],[133,4,96,2],[133,10,96,8,"purchaseProduct"],[133,25,96,23,"purchaseProduct"],[133,26,96,24,"productId"],[133,35,96,41],[133,37,96,58],[134,6,97,4],[134,10,97,8],[134,11,97,9],[134,15,97,13],[134,16,97,14,"isInitialized"],[134,29,97,27],[134,31,97,29],[135,8,98,6],[135,14,98,12],[135,18,98,16],[135,19,98,17,"connect"],[135,26,98,24],[135,27,98,25],[135,28,98,26],[136,6,99,4],[137,6,101,4],[137,10,101,8],[138,8,102,6,"console"],[138,15,102,13],[138,16,102,14,"log"],[138,19,102,17],[138,20,102,18],[138,52,102,50],[138,54,102,52],[139,10,102,54,"productId"],[140,8,102,64],[140,9,102,65],[140,10,102,66],[141,8,103,6],[141,14,103,12,"InAppPurchases"],[141,28,103,26],[141,29,103,27,"purchaseItemAsync"],[141,46,103,44],[141,47,103,45,"productId"],[141,56,103,54],[141,57,103,55],[142,8,104,6],[143,6,105,4],[143,7,105,5],[143,8,105,6],[143,15,105,13,"error"],[143,20,105,23],[143,22,105,25],[144,8,106,6,"console"],[144,15,106,13],[144,16,106,14,"error"],[144,21,106,19],[144,22,106,20],[144,47,106,45],[144,49,106,47,"error"],[144,54,106,52],[144,55,106,53],[145,8,107,6,"console"],[145,15,107,13],[145,16,107,14,"log"],[145,19,107,17],[145,20,107,18],[145,51,107,49],[145,53,107,51],[146,10,107,53,"error"],[146,15,107,58],[146,17,107,60,"error"],[146,22,107,65],[146,24,107,67,"message"],[147,8,107,75],[147,9,107,76],[147,10,107,77],[148,8,108,6],[148,14,108,12,"error"],[148,19,108,17],[149,6,109,4],[150,4,110,2],[152,4,112,2],[153,0,113,0],[154,0,114,0],[155,0,115,0],[156,0,116,0],[157,4,117,2],[157,10,117,8,"verifyWithServer"],[157,26,117,24,"verifyWithServer"],[157,27,118,4,"transactionId"],[157,40,118,25],[157,42,119,4,"cachedOriginalTransactionId"],[157,69,119,40],[157,71,120,32],[158,6,121,4],[158,10,121,8],[159,8,122,6,"console"],[159,15,122,13],[159,16,122,14,"log"],[159,19,122,17],[159,20,122,18],[159,59,122,57],[159,61,122,59],[160,10,122,61,"transactionId"],[161,8,122,75],[161,9,122,76],[161,10,122,77],[162,8,124,6],[162,14,124,12,"response"],[162,22,124,20],[162,25,124,23],[162,31,124,29,"axios"],[162,36,124,34],[162,37,124,34,"default"],[162,44,124,34],[162,45,124,35,"post"],[162,49,124,39],[162,50,124,40],[162,53,124,43,"BACKEND_URL"],[162,64,124,54],[162,90,124,80],[162,92,124,82],[163,10,125,8,"platform"],[163,18,125,16],[163,20,125,18],[163,25,125,23],[164,10,126,8,"transactionId"],[164,23,126,21],[165,10,127,8,"originalTransactionId"],[165,31,127,29],[165,33,127,31,"cachedOriginalTransactionId"],[166,8,128,6],[166,9,128,7],[166,10,128,8],[167,8,130,6],[167,14,130,12,"data"],[167,18,130,16],[167,21,130,19,"response"],[167,29,130,27],[167,30,130,28,"data"],[167,34,130,32],[168,8,131,6,"console"],[168,15,131,13],[168,16,131,14,"log"],[168,19,131,17],[168,20,131,18],[168,61,131,59],[168,63,131,61],[169,10,132,8,"status"],[169,16,132,14],[169,18,132,16,"data"],[169,22,132,20],[169,23,132,21,"status"],[169,29,132,27],[170,10,133,8,"originalTransactionId"],[170,31,133,29],[170,33,133,31,"data"],[170,37,133,35],[170,38,133,36,"originalTransactionId"],[171,8,134,6],[171,9,134,7],[171,10,134,8],[172,8,136,6],[172,15,136,13],[173,10,137,8,"status"],[173,16,137,14],[173,18,137,16,"data"],[173,22,137,20],[173,23,137,21,"status"],[173,29,137,27],[173,34,137,32],[173,42,137,40],[173,45,137,43],[173,53,137,51],[173,56,137,54,"data"],[173,60,137,58],[173,61,137,59,"status"],[173,67,137,65],[173,72,137,70],[173,79,137,77],[173,82,137,80],[173,89,137,87],[173,92,137,90],[173,101,137,99],[174,10,138,8,"needsServerValidation"],[174,31,138,29],[174,33,138,31],[174,38,138,36],[175,10,139,8,"trialEndsAt"],[175,21,139,19],[175,23,139,21,"data"],[175,27,139,25],[175,28,139,26,"trialEndsAt"],[175,39,139,37],[176,10,140,8,"originalTransactionId"],[176,31,140,29],[176,33,140,31,"data"],[176,37,140,35],[176,38,140,36,"originalTransactionId"],[177,8,141,6],[177,9,141,7],[178,6,142,4],[178,7,142,5],[178,8,142,6],[178,15,142,13,"error"],[178,20,142,18],[178,22,142,20],[179,8,143,6,"console"],[179,15,143,13],[179,16,143,14,"error"],[179,21,143,19],[179,22,143,20],[179,59,143,57],[179,61,143,59,"error"],[179,66,143,64],[179,67,143,65],[180,8,144,6,"console"],[180,15,144,13],[180,16,144,14,"log"],[180,19,144,17],[180,20,144,18],[180,58,144,56],[180,60,144,58],[181,10,144,60,"error"],[182,8,144,66],[182,9,144,67],[182,10,144,68],[184,8,146,6],[185,8,147,6],[185,15,147,13],[186,10,148,8,"status"],[186,16,148,14],[186,18,148,16],[186,26,148,24],[187,10,149,8,"needsServerValidation"],[187,31,149,29],[187,33,149,31],[187,37,149,35],[188,10,150,8,"originalTransactionId"],[188,31,150,29],[188,33,150,31,"cachedOriginalTransactionId"],[189,8,151,6],[189,9,151,7],[190,6,152,4],[191,4,153,2],[193,4,155,2],[194,0,156,0],[195,0,157,0],[196,4,158,2],[196,10,158,8,"restorePurchases"],[196,26,158,24,"restorePurchases"],[196,27,158,25,"cachedOriginalTransactionId"],[196,54,158,61],[196,56,158,91],[197,6,159,4],[197,10,159,8],[197,11,159,9],[197,15,159,13],[197,16,159,14,"isInitialized"],[197,29,159,27],[197,31,159,29],[198,8,160,6],[198,14,160,12],[198,18,160,16],[198,19,160,17,"connect"],[198,26,160,24],[198,27,160,25],[198,28,160,26],[199,6,161,4],[200,6,163,4],[200,10,163,8],[201,8,164,6,"console"],[201,15,164,13],[201,16,164,14,"log"],[201,19,164,17],[201,20,164,18],[201,51,164,49],[201,52,164,50],[202,8,165,6],[202,14,165,12],[203,10,165,14,"results"],[204,8,165,22],[204,9,165,23],[204,12,165,26],[204,18,165,32,"InAppPurchases"],[204,32,165,46],[204,33,165,47,"getPurchaseHistoryAsync"],[204,56,165,70],[204,57,165,71],[204,58,165,72],[205,8,167,6],[205,12,167,10,"results"],[205,19,167,17],[205,23,167,21,"results"],[205,30,167,28],[205,31,167,29,"length"],[205,37,167,35],[205,40,167,38],[205,41,167,39],[205,43,167,41],[206,10,168,8],[207,10,169,8],[207,16,169,14,"ourProduct"],[207,26,169,24],[207,29,169,27,"results"],[207,36,169,34],[207,37,169,35,"find"],[207,41,169,39],[207,42,170,11,"p"],[207,43,170,12],[207,47,170,17,"p"],[207,48,170,18],[207,49,170,19,"productId"],[207,58,170,28],[207,63,170,33,"PRODUCT_IDS"],[207,74,170,44],[207,75,170,45,"WEEKLY_PREMIUM"],[207,89,171,8],[207,90,171,9],[208,10,173,8],[208,14,173,12,"ourProduct"],[208,24,173,22],[208,26,173,24],[209,12,174,10,"console"],[209,19,174,17],[209,20,174,18,"log"],[209,23,174,21],[209,24,174,22],[209,57,174,55],[209,59,174,57],[210,14,174,59,"productId"],[210,23,174,68],[210,25,174,70,"ourProduct"],[210,35,174,80],[210,36,174,81,"productId"],[211,12,174,91],[211,13,174,92],[211,14,174,93],[212,12,175,10,"console"],[212,19,175,17],[212,20,175,18,"log"],[212,23,175,21],[212,24,175,22],[212,57,175,55],[212,59,175,57,"ourProduct"],[212,69,175,67],[212,70,175,68],[214,12,177,10],[215,12,178,10],[215,18,178,16,"verifiedState"],[215,31,178,29],[215,34,178,32],[215,40,178,38],[215,44,178,42],[215,45,178,43,"verifyWithServer"],[215,61,178,59],[215,62,179,12,"ourProduct"],[215,72,179,22],[215,73,179,23,"transactionId"],[215,86,179,36],[215,88,180,12,"cachedOriginalTransactionId"],[215,115,181,10],[215,116,181,11],[216,12,183,10],[216,19,183,17,"verifiedState"],[216,32,183,30],[217,10,184,8],[217,11,184,9],[217,17,184,15],[218,12,185,10,"console"],[218,19,185,17],[218,20,185,18,"log"],[218,23,185,21],[218,24,185,22],[218,55,185,53],[218,57,185,55],[219,14,185,57,"reason"],[219,20,185,63],[219,22,185,65],[220,12,185,87],[220,13,185,88],[220,14,185,89],[221,12,186,10],[221,19,186,17],[222,14,186,19,"status"],[222,20,186,25],[222,22,186,27],[222,28,186,33],[223,14,186,35,"needsServerValidation"],[223,35,186,56],[223,37,186,58],[224,12,186,64],[224,13,186,65],[225,10,187,8],[226,8,188,6],[226,9,188,7],[226,15,188,13],[227,10,189,8,"console"],[227,17,189,15],[227,18,189,16,"log"],[227,21,189,19],[227,22,189,20],[227,53,189,51],[227,55,189,53],[228,12,189,55,"reason"],[228,18,189,61],[228,20,189,63],[229,10,189,78],[229,11,189,79],[229,12,189,80],[230,10,190,8],[230,17,190,15],[231,12,190,17,"status"],[231,18,190,23],[231,20,190,25],[231,26,190,31],[232,12,190,33,"needsServerValidation"],[232,33,190,54],[232,35,190,56],[233,10,190,62],[233,11,190,63],[234,8,191,6],[235,6,192,4],[235,7,192,5],[235,8,192,6],[235,15,192,13,"error"],[235,20,192,18],[235,22,192,20],[236,8,193,6,"console"],[236,15,193,13],[236,16,193,14,"error"],[236,21,193,19],[236,22,193,20],[236,46,193,44],[236,48,193,46,"error"],[236,53,193,51],[236,54,193,52],[237,8,194,6,"console"],[237,15,194,13],[237,16,194,14,"log"],[237,19,194,17],[237,20,194,18],[237,50,194,48],[237,52,194,50],[238,10,194,52,"error"],[239,8,194,58],[239,9,194,59],[239,10,194,60],[240,8,195,6],[240,14,195,12],[240,18,195,16,"Error"],[240,23,195,21],[240,24,195,22],[240,53,195,51],[240,54,195,52],[241,6,196,4],[242,4,197,2],[244,4,199,2],[245,0,200,0],[246,0,201,0],[247,4,202,2,"setupPurchaseListener"],[247,25,202,23,"setupPurchaseListener"],[247,26,202,24,"callback"],[247,34,202,68],[247,36,202,76],[248,6,203,4],[248,10,203,8],[248,14,203,12],[248,15,203,13,"purchaseListener"],[248,31,203,29],[248,33,203,31],[249,8,204,6,"console"],[249,15,204,13],[249,16,204,14,"warn"],[249,20,204,18],[249,21,204,19],[249,76,204,74],[249,77,204,75],[250,8,205,6],[250,12,205,10],[250,13,205,11,"purchaseListener"],[250,29,205,27],[250,30,205,28,"remove"],[250,36,205,34],[250,37,205,35],[250,38,205,36],[251,6,206,4],[252,6,208,4],[252,10,208,8],[252,11,208,9,"onPurchaseUpdate"],[252,27,208,25],[252,30,208,28,"callback"],[252,38,208,36],[253,6,210,4],[253,10,210,8],[253,11,210,9,"purchaseListener"],[253,27,210,25],[253,30,210,28,"InAppPurchases"],[253,44,210,42],[253,45,210,43,"setPurchaseListener"],[253,64,210,62],[253,65,211,6],[253,66,211,7],[254,8,211,9,"responseCode"],[254,20,211,21],[255,8,211,23,"results"],[255,15,211,30],[256,8,211,32,"errorCode"],[257,6,211,42],[257,7,211,43],[257,12,211,48],[258,8,212,8,"console"],[258,15,212,15],[258,16,212,16,"log"],[258,19,212,19],[258,20,212,20],[258,44,212,44],[258,46,212,46],[259,10,212,48,"responseCode"],[259,22,212,60],[260,10,212,62,"errorCode"],[260,19,212,71],[261,10,212,73,"resultsCount"],[261,22,212,85],[261,24,212,87,"results"],[261,31,212,94],[261,33,212,96,"length"],[262,8,212,103],[262,9,212,104],[262,10,212,105],[263,8,214,8],[263,12,214,12,"responseCode"],[263,24,214,24],[263,29,214,29,"InAppPurchases"],[263,43,214,43],[263,44,214,44,"IAPResponseCode"],[263,59,214,59],[263,60,214,60,"OK"],[263,62,214,62],[263,64,214,64],[264,10,215,10],[264,14,215,14,"results"],[264,21,215,21],[264,25,215,25,"results"],[264,32,215,32],[264,33,215,33,"length"],[264,39,215,39],[264,42,215,42],[264,43,215,43],[264,45,215,45],[265,12,216,12],[265,18,216,18,"purchase"],[265,26,216,26],[265,29,216,29,"results"],[265,36,216,36],[265,37,216,37],[265,38,216,38],[265,39,216,39],[266,12,217,12,"console"],[266,19,217,19],[266,20,217,20,"log"],[266,23,217,23],[266,24,217,24],[266,58,217,58],[266,60,217,60],[267,14,218,14,"productId"],[267,23,218,23],[267,25,218,25,"purchase"],[267,33,218,33],[267,34,218,34,"productId"],[267,43,218,43],[268,14,219,14,"transactionId"],[268,27,219,27],[268,29,219,29,"purchase"],[268,37,219,37],[268,38,219,38,"transactionId"],[269,12,220,12],[269,13,220,13],[269,14,220,14],[270,12,222,12],[270,18,222,18,"state"],[270,23,222,42],[270,26,222,45],[271,14,223,14,"status"],[271,20,223,20],[271,22,223,22],[271,30,223,30],[272,14,223,32],[273,14,224,14,"needsServerValidation"],[273,35,224,35],[273,37,224,37],[273,41,224,41],[274,14,225,14,"originalTransactionId"],[274,35,225,35],[274,37,225,37,"purchase"],[274,45,225,45],[274,46,225,46,"transactionId"],[275,14,226,14],[276,14,227,14],[277,12,228,12],[277,13,228,13],[278,12,230,12],[278,16,230,16],[278,17,230,17,"onPurchaseUpdate"],[278,33,230,33],[278,36,230,36,"state"],[278,41,230,41],[278,42,230,42],[279,10,231,10],[280,8,232,8],[280,9,232,9],[280,15,232,15],[280,19,232,19,"responseCode"],[280,31,232,31],[280,36,232,36,"InAppPurchases"],[280,50,232,50],[280,51,232,51,"IAPResponseCode"],[280,66,232,66],[280,67,232,67,"USER_CANCELED"],[280,80,232,80],[280,82,232,82],[281,10,233,10,"console"],[281,17,233,17],[281,18,233,18,"log"],[281,21,233,21],[281,22,233,22],[281,58,233,58],[281,59,233,59],[282,10,234,10],[283,8,235,8],[283,9,235,9],[283,15,235,15],[283,19,235,19,"responseCode"],[283,31,235,31],[283,36,235,36,"InAppPurchases"],[283,50,235,50],[283,51,235,51,"IAPResponseCode"],[283,66,235,66],[283,67,235,67,"DEFERRED"],[283,75,235,75],[283,77,235,77],[284,10,236,10,"console"],[284,17,236,17],[284,18,236,18,"log"],[284,21,236,21],[284,22,236,22],[284,57,236,57],[284,58,236,58],[285,10,237,10],[286,8,238,8],[286,9,238,9],[286,15,238,15],[287,10,239,10,"console"],[287,17,239,17],[287,18,239,18,"log"],[287,21,239,21],[287,22,239,22],[287,53,239,53],[287,55,239,55],[288,12,239,57,"responseCode"],[288,24,239,69],[289,12,239,71,"errorCode"],[290,10,239,81],[290,11,239,82],[290,12,239,83],[291,10,240,10],[292,8,241,8],[293,6,242,6],[293,7,243,4],[293,8,243,5],[294,6,245,4,"console"],[294,13,245,11],[294,14,245,12,"log"],[294,17,245,15],[294,18,245,16],[294,56,245,54],[294,57,245,55],[295,4,246,2],[297,4,248,2],[298,0,249,0],[299,0,250,0],[300,4,251,2,"removePurchaseListener"],[300,26,251,24,"removePurchaseListener"],[300,27,251,24],[300,29,251,33],[301,6,252,4],[301,10,252,8],[301,14,252,12],[301,15,252,13,"purchaseListener"],[301,31,252,29],[301,33,252,31],[302,8,253,6],[302,12,253,10],[302,13,253,11,"purchaseListener"],[302,29,253,27],[302,30,253,28,"remove"],[302,36,253,34],[302,37,253,35],[302,38,253,36],[303,8,254,6],[303,12,254,10],[303,13,254,11,"purchaseListener"],[303,29,254,27],[303,32,254,30],[303,36,254,34],[304,8,255,6,"console"],[304,15,255,13],[304,16,255,14,"log"],[304,19,255,17],[304,20,255,18],[304,55,255,53],[304,56,255,54],[305,6,256,4],[306,4,257,2],[308,4,259,2],[309,0,260,0],[310,0,261,0],[311,0,262,0],[312,0,263,0],[313,4,264,2],[313,10,264,8,"syncEntitlementOnLaunch"],[313,33,264,31,"syncEntitlementOnLaunch"],[313,34,265,4,"cachedOriginalTransactionId"],[313,61,265,40],[313,63,266,4,"needsServerValidation"],[313,84,266,34],[313,87,266,37],[313,92,266,42],[313,94,267,39],[314,6,268,4],[315,6,269,4],[315,10,269,8],[315,11,269,9,"cachedOriginalTransactionId"],[315,38,269,36],[315,42,269,40],[315,43,269,41,"needsServerValidation"],[315,64,269,62],[315,66,269,64],[316,8,270,6,"console"],[316,15,270,13],[316,16,270,14,"log"],[316,19,270,17],[316,20,270,18],[316,60,270,58],[316,61,270,59],[317,8,271,6],[317,15,271,13],[317,19,271,17],[318,6,272,4],[319,6,274,4],[319,10,274,8],[320,8,275,6,"console"],[320,15,275,13],[320,16,275,14,"log"],[320,19,275,17],[320,20,275,18],[320,56,275,54],[320,58,275,56],[321,10,276,8,"hasOriginalTransactionId"],[321,34,276,32],[321,36,276,34],[321,37,276,35],[321,38,276,36,"cachedOriginalTransactionId"],[322,8,277,6],[322,9,277,7],[322,10,277,8],[323,8,279,6],[323,14,279,12,"response"],[323,22,279,20],[323,25,279,23],[323,31,279,29,"axios"],[323,36,279,34],[323,37,279,34,"default"],[323,44,279,34],[323,45,279,35,"get"],[323,48,279,38],[323,49,279,39],[323,52,279,42,"BACKEND_URL"],[323,63,279,53],[323,89,279,79],[323,91,279,81],[324,10,280,8,"params"],[324,16,280,14],[324,18,280,16],[325,12,281,10,"originalTransactionId"],[325,33,281,31],[325,35,281,33,"cachedOriginalTransactionId"],[326,10,282,8],[327,8,283,6],[327,9,283,7],[327,10,283,8],[328,8,285,6],[328,14,285,12,"data"],[328,18,285,16],[328,21,285,19,"response"],[328,29,285,27],[328,30,285,28,"data"],[328,34,285,32],[329,8,286,6,"console"],[329,15,286,13],[329,16,286,14,"log"],[329,19,286,17],[329,20,286,18],[329,58,286,56],[329,60,286,58],[330,10,287,8,"status"],[330,16,287,14],[330,18,287,16,"data"],[330,22,287,20],[330,23,287,21,"status"],[330,29,287,27],[331,10,288,8,"originalTransactionId"],[331,31,288,29],[331,33,288,31,"data"],[331,37,288,35],[331,38,288,36,"originalTransactionId"],[332,8,289,6],[332,9,289,7],[332,10,289,8],[333,8,291,6],[333,15,291,13],[334,10,292,8,"status"],[334,16,292,14],[334,18,292,16,"data"],[334,22,292,20],[334,23,292,21,"status"],[334,29,292,27],[334,34,292,32],[334,42,292,40],[334,45,292,43],[334,53,292,51],[334,56,292,54,"data"],[334,60,292,58],[334,61,292,59,"status"],[334,67,292,65],[334,72,292,70],[334,79,292,77],[334,82,292,80],[334,89,292,87],[334,92,292,90],[334,101,292,99],[335,10,293,8,"needsServerValidation"],[335,31,293,29],[335,33,293,31],[335,38,293,36],[336,10,294,8,"trialEndsAt"],[336,21,294,19],[336,23,294,21,"data"],[336,27,294,25],[336,28,294,26,"trialEndsAt"],[336,39,294,37],[337,10,295,8,"originalTransactionId"],[337,31,295,29],[337,33,295,31,"data"],[337,37,295,35],[337,38,295,36,"originalTransactionId"],[338,8,296,6],[338,9,296,7],[339,6,297,4],[339,7,297,5],[339,8,297,6],[339,15,297,13,"error"],[339,20,297,18],[339,22,297,20],[340,8,298,6,"console"],[340,15,298,13],[340,16,298,14,"error"],[340,21,298,19],[340,22,298,20],[340,56,298,54],[340,58,298,56,"error"],[340,63,298,61],[340,64,298,62],[341,8,299,6,"console"],[341,15,299,13],[341,16,299,14,"log"],[341,19,299,17],[341,20,299,18],[341,55,299,53],[341,57,299,55],[342,10,299,57,"reason"],[342,16,299,63],[342,18,299,65],[343,8,299,91],[343,9,299,92],[343,10,299,93],[345,8,301,6],[346,8,302,6],[346,15,302,13],[346,19,302,17],[347,6,303,4],[348,4,304,2],[350,4,306,2],[351,0,307,0],[352,0,308,0],[353,4,309,2,"isAvailable"],[353,15,309,13,"isAvailable"],[353,16,309,13],[353,18,309,25],[354,6,310,4],[355,6,311,4],[355,13,311,11,"Platform"],[355,21,311,19],[355,22,311,19,"default"],[355,29,311,19],[355,30,311,20,"OS"],[355,32,311,22],[355,37,311,27],[355,42,311,32],[355,46,311,36,"Platform"],[355,54,311,44],[355,55,311,44,"default"],[355,62,311,44],[355,63,311,45,"OS"],[355,65,311,47],[355,70,311,52],[355,79,311,61],[356,4,312,2],[357,2,313,0],[359,2,315,0],[360,2,316,7],[360,8,316,13,"iapService"],[360,18,316,23],[360,21,316,26],[360,25,316,30,"IAPService"],[360,35,316,40],[360,36,316,41],[360,37,316,42],[361,0,316,43],[361,3]],"functionMap":{"names":["<global>","IAPService","IAPService#connect","IAPService#disconnect","IAPService#getProducts","IAPService#purchaseProduct","IAPService#verifyWithServer","IAPService#restorePurchases","results.find$argument_0","IAPService#setupPurchaseListener","InAppPurchases.setPurchaseListener$argument_0","IAPService#removePurchaseListener","IAPService#syncEntitlementOnLaunch","IAPService#isAvailable"],"mappings":"AAA;ACwB;ECQ;GDe;EEK;GFa;EGK;GHoB;EIK;GJc;EKO;GLoC;EMK;UCY,iDD;GN2B;EQK;MCS;OD+B;GRI;EUK;GVM;EWO;GXwC;EYK;GZG;CDC"},"hasCjsExports":false},"type":"js/module"}]}