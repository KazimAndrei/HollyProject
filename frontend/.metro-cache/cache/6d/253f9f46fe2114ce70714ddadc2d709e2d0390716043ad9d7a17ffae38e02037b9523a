{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"normalizeRef\", {\n    enumerable: true,\n    get: function () {\n      return normalizeRef;\n    }\n  });\n  Object.defineProperty(exports, \"buildPassageDeeplink\", {\n    enumerable: true,\n    get: function () {\n      return buildPassageDeeplink;\n    }\n  });\n  Object.defineProperty(exports, \"parseCitations\", {\n    enumerable: true,\n    get: function () {\n      return parseCitations;\n    }\n  });\n  Object.defineProperty(exports, \"truncateCitation\", {\n    enumerable: true,\n    get: function () {\n      return truncateCitation;\n    }\n  });\n  Object.defineProperty(exports, \"findFirstMatch\", {\n    enumerable: true,\n    get: function () {\n      return findFirstMatch;\n    }\n  });\n  /**\n   * Deep link utilities for Bible Chat\n   */\n\n  // Book name aliases (EN)\n  var EN_ALIASES = {\n    'Jn': 'John',\n    'Mt': 'Matthew',\n    'Mk': 'Mark',\n    'Lk': 'Luke',\n    'Ps': 'Psalms',\n    'Phil': 'Philippians',\n    'Rom': 'Romans',\n    'Prov': 'Proverbs',\n    'Isa': 'Isaiah',\n    'Jer': 'Jeremiah',\n    'Jas': 'James',\n    'Tim': 'Timothy',\n    'Cor': 'Corinthians'\n  };\n\n  // Book name aliases (RU)\n  var RU_ALIASES = {\n    'Ин': 'Иоанна',\n    'Мф': 'Матфея',\n    'Мк': 'Марка',\n    'Лк': 'Луки',\n    'Пс': 'Псалом',\n    'Флп': 'Филиппийцам',\n    'Рим': 'Римлянам',\n    'Прит': 'Притчи',\n    'Ис': 'Исайя',\n    'Иер': 'Иеремия',\n    'Иак': 'Иакова'\n  };\n\n  /**\n   * Normalize book name aliases\n   */\n  var normalizeBookName = (book, locale) => {\n    var aliases = locale === 'en' ? EN_ALIASES : RU_ALIASES;\n    return aliases[book] || book;\n  };\n\n  /**\n   * Normalize reference (resolve aliases)\n   * @param ref - Reference string (e.g., \"Jn 3:16\" or \"Ин 3:16\")\n   * @param locale - Language locale\n   * @returns Normalized reference\n   */\n  var normalizeRef = (ref, locale) => {\n    var parts = ref.split(' ');\n    if (parts.length >= 2) {\n      var book = normalizeBookName(parts[0], locale);\n      var rest = parts.slice(1).join(' ');\n      return `${book} ${rest}`;\n    }\n    return ref;\n  };\n\n  /**\n   * Build deep link for passage viewer\n   * Format: app://passage/{ref}\n   */\n  var buildPassageDeeplink = (ref, locale) => {\n    var normalizedRef = normalizeRef(ref, locale);\n    return `app://passage/${encodeURIComponent(normalizedRef)}`;\n  };\n\n  /**\n   * Parse citations from text using regex\n   * Supports EN and RU formats\n   */\n  var parseCitations = (text, locale) => {\n    var citations = [];\n\n    // EN regex: \"John 3:16\", \"1 Corinthians 10:13\", \"Psalm 23:1-4\"\n    var enRegex = /([1-3]?\\s?[A-Za-z]+)\\s+(\\d{1,3}):(\\d{1,3}(?:-\\d{1,3})?)/g;\n\n    // RU regex: \"Иоанна 3:16\", \"1 Коринфянам 10:13\", \"Псалом 23:1-4\"\n    var ruRegex = /([1-3]?\\s?[А-ЯЁ][а-яё]+)\\s+(\\d{1,3}):(\\d{1,3}(?:-\\d{1,3})?)/g;\n    var regex = locale === 'en' ? enRegex : ruRegex;\n    var matches = text.matchAll(regex);\n    for (var match of matches) {\n      citations.push(match[0]);\n    }\n\n    // Deduplicate and limit to max 5\n    return [...new Set(citations)].slice(0, 5);\n  };\n\n  /**\n   * Truncate long citation text\n   */\n  var truncateCitation = function (ref) {\n    var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;\n    if (ref.length <= maxLength) return ref;\n    return ref.substring(0, maxLength - 1) + '…';\n  };\n\n  /**\n   * Find first match of query in text (case-insensitive, whole-word)\n   * Returns character offset range or null\n   */\n  var findFirstMatch = (text, query) => {\n    var normalizedText = text.toLowerCase();\n    var normalizedQuery = query.toLowerCase();\n\n    // Try whole-word match first\n    var wordRegex = new RegExp(`\\\\b${normalizedQuery}\\\\b`, 'i');\n    var match = text.match(wordRegex);\n    if (match && match.index !== undefined) {\n      return {\n        start: match.index,\n        end: match.index + match[0].length\n      };\n    }\n\n    // Fallback: simple substring match\n    var index = normalizedText.indexOf(normalizedQuery);\n    if (index !== -1) {\n      return {\n        start: index,\n        end: index + query.length\n      };\n    }\n    return null;\n  };\n});","lineCount":165,"map":[[7,2,51,0,"Object"],[7,8,51,0],[7,9,51,0,"defineProperty"],[7,23,51,0],[7,24,51,0,"exports"],[7,31,51,0],[8,4,51,0,"enumerable"],[8,14,51,0],[9,4,51,0,"get"],[9,7,51,0],[9,18,51,0,"get"],[9,19,51,0],[10,6,51,0],[10,13,51,0,"normalizeRef"],[10,25,51,0],[11,4,51,0],[12,2,51,0],[13,2,65,0,"Object"],[13,8,65,0],[13,9,65,0,"defineProperty"],[13,23,65,0],[13,24,65,0,"exports"],[13,31,65,0],[14,4,65,0,"enumerable"],[14,14,65,0],[15,4,65,0,"get"],[15,7,65,0],[15,18,65,0,"get"],[15,19,65,0],[16,6,65,0],[16,13,65,0,"buildPassageDeeplink"],[16,33,65,0],[17,4,65,0],[18,2,65,0],[19,2,74,0,"Object"],[19,8,74,0],[19,9,74,0,"defineProperty"],[19,23,74,0],[19,24,74,0,"exports"],[19,31,74,0],[20,4,74,0,"enumerable"],[20,14,74,0],[21,4,74,0,"get"],[21,7,74,0],[21,18,74,0,"get"],[21,19,74,0],[22,6,74,0],[22,13,74,0,"parseCitations"],[22,27,74,0],[23,4,74,0],[24,2,74,0],[25,2,97,0,"Object"],[25,8,97,0],[25,9,97,0,"defineProperty"],[25,23,97,0],[25,24,97,0,"exports"],[25,31,97,0],[26,4,97,0,"enumerable"],[26,14,97,0],[27,4,97,0,"get"],[27,7,97,0],[27,18,97,0,"get"],[27,19,97,0],[28,6,97,0],[28,13,97,0,"truncateCitation"],[28,29,97,0],[29,4,97,0],[30,2,97,0],[31,2,106,0,"Object"],[31,8,106,0],[31,9,106,0,"defineProperty"],[31,23,106,0],[31,24,106,0,"exports"],[31,31,106,0],[32,4,106,0,"enumerable"],[32,14,106,0],[33,4,106,0,"get"],[33,7,106,0],[33,18,106,0,"get"],[33,19,106,0],[34,6,106,0],[34,13,106,0,"findFirstMatch"],[34,27,106,0],[35,4,106,0],[36,2,106,0],[37,2,1,0],[38,0,2,0],[39,0,3,0],[41,2,5,0],[42,2,6,0],[42,6,6,6,"EN_ALIASES"],[42,16,6,40],[42,19,6,43],[43,4,7,2],[43,8,7,6],[43,10,7,8],[43,16,7,14],[44,4,8,2],[44,8,8,6],[44,10,8,8],[44,19,8,17],[45,4,9,2],[45,8,9,6],[45,10,9,8],[45,16,9,14],[46,4,10,2],[46,8,10,6],[46,10,10,8],[46,16,10,14],[47,4,11,2],[47,8,11,6],[47,10,11,8],[47,18,11,16],[48,4,12,2],[48,10,12,8],[48,12,12,10],[48,25,12,23],[49,4,13,2],[49,9,13,7],[49,11,13,9],[49,19,13,17],[50,4,14,2],[50,10,14,8],[50,12,14,10],[50,22,14,20],[51,4,15,2],[51,9,15,7],[51,11,15,9],[51,19,15,17],[52,4,16,2],[52,9,16,7],[52,11,16,9],[52,21,16,19],[53,4,17,2],[53,9,17,7],[53,11,17,9],[53,18,17,16],[54,4,18,2],[54,9,18,7],[54,11,18,9],[54,20,18,18],[55,4,19,2],[55,9,19,7],[55,11,19,9],[56,2,20,0],[56,3,20,1],[58,2,22,0],[59,2,23,0],[59,6,23,6,"RU_ALIASES"],[59,16,23,40],[59,19,23,43],[60,4,24,2],[60,8,24,6],[60,10,24,8],[60,18,24,16],[61,4,25,2],[61,8,25,6],[61,10,25,8],[61,18,25,16],[62,4,26,2],[62,8,26,6],[62,10,26,8],[62,17,26,15],[63,4,27,2],[63,8,27,6],[63,10,27,8],[63,16,27,14],[64,4,28,2],[64,8,28,6],[64,10,28,8],[64,18,28,16],[65,4,29,2],[65,9,29,7],[65,11,29,9],[65,24,29,22],[66,4,30,2],[66,9,30,7],[66,11,30,9],[66,21,30,19],[67,4,31,2],[67,10,31,8],[67,12,31,10],[67,20,31,18],[68,4,32,2],[68,8,32,6],[68,10,32,8],[68,17,32,15],[69,4,33,2],[69,9,33,7],[69,11,33,9],[69,20,33,18],[70,4,34,2],[70,9,34,7],[70,11,34,9],[71,2,35,0],[71,3,35,1],[73,2,37,0],[74,0,38,0],[75,0,39,0],[76,2,40,0],[76,6,40,6,"normalizeBookName"],[76,23,40,23],[76,26,40,26,"normalizeBookName"],[76,27,40,27,"book"],[76,31,40,39],[76,33,40,41,"locale"],[76,39,40,60],[76,44,40,73],[77,4,41,2],[77,8,41,8,"aliases"],[77,15,41,15],[77,18,41,18,"locale"],[77,24,41,24],[77,29,41,29],[77,33,41,33],[77,36,41,36,"EN_ALIASES"],[77,46,41,46],[77,49,41,49,"RU_ALIASES"],[77,59,41,59],[78,4,42,2],[78,11,42,9,"aliases"],[78,18,42,16],[78,19,42,17,"book"],[78,23,42,21],[78,24,42,22],[78,28,42,26,"book"],[78,32,42,30],[79,2,43,0],[79,3,43,1],[81,2,45,0],[82,0,46,0],[83,0,47,0],[84,0,48,0],[85,0,49,0],[86,0,50,0],[87,2,51,7],[87,6,51,13,"normalizeRef"],[87,18,51,25],[87,21,51,28,"normalizeRef"],[87,22,51,29,"ref"],[87,25,51,40],[87,27,51,42,"locale"],[87,33,51,61],[87,38,51,74],[88,4,52,2],[88,8,52,8,"parts"],[88,13,52,13],[88,16,52,16,"ref"],[88,19,52,19],[88,20,52,20,"split"],[88,25,52,25],[88,26,52,26],[88,29,52,29],[88,30,52,30],[89,4,53,2],[89,8,53,6,"parts"],[89,13,53,11],[89,14,53,12,"length"],[89,20,53,18],[89,24,53,22],[89,25,53,23],[89,27,53,25],[90,6,54,4],[90,10,54,10,"book"],[90,14,54,14],[90,17,54,17,"normalizeBookName"],[90,34,54,34],[90,35,54,35,"parts"],[90,40,54,40],[90,41,54,41],[90,42,54,42],[90,43,54,43],[90,45,54,45,"locale"],[90,51,54,51],[90,52,54,52],[91,6,55,4],[91,10,55,10,"rest"],[91,14,55,14],[91,17,55,17,"parts"],[91,22,55,22],[91,23,55,23,"slice"],[91,28,55,28],[91,29,55,29],[91,30,55,30],[91,31,55,31],[91,32,55,32,"join"],[91,36,55,36],[91,37,55,37],[91,40,55,40],[91,41,55,41],[92,6,56,4],[92,13,56,11],[92,16,56,14,"book"],[92,20,56,18],[92,24,56,22,"rest"],[92,28,56,26],[92,30,56,28],[93,4,57,2],[94,4,58,2],[94,11,58,9,"ref"],[94,14,58,12],[95,2,59,0],[95,3,59,1],[97,2,61,0],[98,0,62,0],[99,0,63,0],[100,0,64,0],[101,2,65,7],[101,6,65,13,"buildPassageDeeplink"],[101,26,65,33],[101,29,65,36,"buildPassageDeeplink"],[101,30,65,37,"ref"],[101,33,65,48],[101,35,65,50,"locale"],[101,41,65,69],[101,46,65,82],[102,4,66,2],[102,8,66,8,"normalizedRef"],[102,21,66,21],[102,24,66,24,"normalizeRef"],[102,36,66,36],[102,37,66,37,"ref"],[102,40,66,40],[102,42,66,42,"locale"],[102,48,66,48],[102,49,66,49],[103,4,67,2],[103,11,67,9],[103,28,67,26,"encodeURIComponent"],[103,46,67,44],[103,47,67,45,"normalizedRef"],[103,60,67,58],[103,61,67,59],[103,63,67,61],[104,2,68,0],[104,3,68,1],[106,2,70,0],[107,0,71,0],[108,0,72,0],[109,0,73,0],[110,2,74,7],[110,6,74,13,"parseCitations"],[110,20,74,27],[110,23,74,30,"parseCitations"],[110,24,74,31,"text"],[110,28,74,43],[110,30,74,45,"locale"],[110,36,74,64],[110,41,74,79],[111,4,75,2],[111,8,75,8,"citations"],[111,17,75,27],[111,20,75,30],[111,22,75,32],[113,4,77,2],[114,4,78,2],[114,8,78,8,"enRegex"],[114,15,78,15],[114,18,78,18],[114,76,78,76],[116,4,80,2],[117,4,81,2],[117,8,81,8,"ruRegex"],[117,15,81,15],[117,18,81,18],[117,80,81,80],[118,4,83,2],[118,8,83,8,"regex"],[118,13,83,13],[118,16,83,16,"locale"],[118,22,83,22],[118,27,83,27],[118,31,83,31],[118,34,83,34,"enRegex"],[118,41,83,41],[118,44,83,44,"ruRegex"],[118,51,83,51],[119,4,84,2],[119,8,84,8,"matches"],[119,15,84,15],[119,18,84,18,"text"],[119,22,84,22],[119,23,84,23,"matchAll"],[119,31,84,31],[119,32,84,32,"regex"],[119,37,84,37],[119,38,84,38],[120,4,86,2],[120,9,86,7],[120,13,86,13,"match"],[120,18,86,18],[120,22,86,22,"matches"],[120,29,86,29],[120,31,86,31],[121,6,87,4,"citations"],[121,15,87,13],[121,16,87,14,"push"],[121,20,87,18],[121,21,87,19,"match"],[121,26,87,24],[121,27,87,25],[121,28,87,26],[121,29,87,27],[121,30,87,28],[122,4,88,2],[124,4,90,2],[125,4,91,2],[125,11,91,9],[125,12,91,10],[125,15,91,13],[125,19,91,17,"Set"],[125,22,91,20],[125,23,91,21,"citations"],[125,32,91,30],[125,33,91,31],[125,34,91,32],[125,35,91,33,"slice"],[125,40,91,38],[125,41,91,39],[125,42,91,40],[125,44,91,42],[125,45,91,43],[125,46,91,44],[126,2,92,0],[126,3,92,1],[128,2,94,0],[129,0,95,0],[130,0,96,0],[131,2,97,7],[131,6,97,13,"truncateCitation"],[131,22,97,29],[131,25,97,32],[131,34,97,32,"truncateCitation"],[131,35,97,33,"ref"],[131,38,97,44],[131,40,97,81],[132,4,97,81],[132,8,97,46,"maxLength"],[132,17,97,63],[132,20,97,63,"arguments"],[132,29,97,63],[132,30,97,63,"length"],[132,36,97,63],[132,44,97,63,"arguments"],[132,53,97,63],[132,61,97,63,"undefined"],[132,70,97,63],[132,73,97,63,"arguments"],[132,82,97,63],[132,88,97,66],[132,90,97,68],[133,4,98,2],[133,8,98,6,"ref"],[133,11,98,9],[133,12,98,10,"length"],[133,18,98,16],[133,22,98,20,"maxLength"],[133,31,98,29],[133,33,98,31],[133,40,98,38,"ref"],[133,43,98,41],[134,4,99,2],[134,11,99,9,"ref"],[134,14,99,12],[134,15,99,13,"substring"],[134,24,99,22],[134,25,99,23],[134,26,99,24],[134,28,99,26,"maxLength"],[134,37,99,35],[134,40,99,38],[134,41,99,39],[134,42,99,40],[134,45,99,43],[134,48,99,46],[135,2,100,0],[135,3,100,1],[137,2,102,0],[138,0,103,0],[139,0,104,0],[140,0,105,0],[141,2,106,7],[141,6,106,13,"findFirstMatch"],[141,20,106,27],[141,23,106,30,"findFirstMatch"],[141,24,106,31,"text"],[141,28,106,43],[141,30,106,45,"query"],[141,35,106,58],[141,40,106,102],[142,4,107,2],[142,8,107,8,"normalizedText"],[142,22,107,22],[142,25,107,25,"text"],[142,29,107,29],[142,30,107,30,"toLowerCase"],[142,41,107,41],[142,42,107,42],[142,43,107,43],[143,4,108,2],[143,8,108,8,"normalizedQuery"],[143,23,108,23],[143,26,108,26,"query"],[143,31,108,31],[143,32,108,32,"toLowerCase"],[143,43,108,43],[143,44,108,44],[143,45,108,45],[145,4,110,2],[146,4,111,2],[146,8,111,8,"wordRegex"],[146,17,111,17],[146,20,111,20],[146,24,111,24,"RegExp"],[146,30,111,30],[146,31,111,31],[146,37,111,37,"normalizedQuery"],[146,52,111,52],[146,57,111,57],[146,59,111,59],[146,62,111,62],[146,63,111,63],[147,4,112,2],[147,8,112,8,"match"],[147,13,112,13],[147,16,112,16,"text"],[147,20,112,20],[147,21,112,21,"match"],[147,26,112,26],[147,27,112,27,"wordRegex"],[147,36,112,36],[147,37,112,37],[148,4,114,2],[148,8,114,6,"match"],[148,13,114,11],[148,17,114,15,"match"],[148,22,114,20],[148,23,114,21,"index"],[148,28,114,26],[148,33,114,31,"undefined"],[148,42,114,40],[148,44,114,42],[149,6,115,4],[149,13,115,11],[150,8,116,6,"start"],[150,13,116,11],[150,15,116,13,"match"],[150,20,116,18],[150,21,116,19,"index"],[150,26,116,24],[151,8,117,6,"end"],[151,11,117,9],[151,13,117,11,"match"],[151,18,117,16],[151,19,117,17,"index"],[151,24,117,22],[151,27,117,25,"match"],[151,32,117,30],[151,33,117,31],[151,34,117,32],[151,35,117,33],[151,36,117,34,"length"],[152,6,118,4],[152,7,118,5],[153,4,119,2],[155,4,121,2],[156,4,122,2],[156,8,122,8,"index"],[156,13,122,13],[156,16,122,16,"normalizedText"],[156,30,122,30],[156,31,122,31,"indexOf"],[156,38,122,38],[156,39,122,39,"normalizedQuery"],[156,54,122,54],[156,55,122,55],[157,4,123,2],[157,8,123,6,"index"],[157,13,123,11],[157,18,123,16],[157,19,123,17],[157,20,123,18],[157,22,123,20],[158,6,124,4],[158,13,124,11],[159,8,125,6,"start"],[159,13,125,11],[159,15,125,13,"index"],[159,20,125,18],[160,8,126,6,"end"],[160,11,126,9],[160,13,126,11,"index"],[160,18,126,16],[160,21,126,19,"query"],[160,26,126,24],[160,27,126,25,"length"],[161,6,127,4],[161,7,127,5],[162,4,128,2],[163,4,130,2],[163,11,130,9],[163,15,130,13],[164,2,131,0],[164,3,131,1],[165,0,131,2],[165,3]],"functionMap":{"names":["<global>","normalizeBookName","normalizeRef","buildPassageDeeplink","parseCitations","truncateCitation","findFirstMatch"],"mappings":"AAA;0BCuC;CDG;4BEQ;CFQ;oCGM;CHG;8BIM;CJkB;gCKK;CLG;8BMM;CNyB"},"hasCjsExports":false},"type":"js/module"}]}